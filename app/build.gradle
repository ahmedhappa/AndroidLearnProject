plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'//firebase plugin
    id 'androidx.navigation.safeargs.kotlin' //navigation
    id 'dagger.hilt.android.plugin' //hilt
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.example.androidlearnproject"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true //this turns on R8 shrinking to achieve shrinking, obfuscation, and optimization.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "myDimenstion"

    productFlavors {
        free {
            dimension "myDimenstion"
        }
        paid {
            dimension "myDimenstion"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        // Flag to enable support for the new language APIs for new date time library
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }


    // to view data binding
    buildFeatures {
        viewBinding true
    }

    /* your tests interact with several Android framework dependencies, or interact with those dependencies in a complex way
     , use the Robolectric artifacts that AndroidX Test provides.
     Robolectric executes real Android framework code and fakes of native framework code on your local JVM or on a real device.*/
    /* testOptions {
         unitTests.includeAndroidResources = true
     }*/
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    implementation 'androidx.activity:activity-ktx:1.4.0'

    implementation 'com.google.android.exoplayer:exoplayer:2.16.1'
    // custom youtube library
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:10.0.5'
    // official youtube library
//    implementation files('libs/YouTubeAndroidPlayerApi.jar')
    implementation 'com.google.apis:google-api-services-youtube:v3-rev20200618-1.30.9'
    //custom vimeo library
    implementation 'com.ct7ct7ct7.androidvimeoplayer:library:1.2.2'
    //retrofit library
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0' //for logs
    //firebase bom
    implementation platform('com.google.firebase:firebase-bom:26.0.0')
    //firebase Analytics
    implementation 'com.google.firebase:firebase-analytics:20.1.0'
    //firebase auth
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.1'
    implementation "androidx.browser:browser:1.4.0"
    //chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    //paging3 library
    def paging_version = "3.1.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-guava:$paging_version" //optional - live data support
    //work manager - for schedule tasks
    implementation "androidx.work:work-runtime-ktx:2.7.1"
    //notification media
    implementation 'androidx.media:media:1.5.0'
    //navigation library
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    //dependency injection (hilt)
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    //for new +8 java libraries (date time library)
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    //cameraX library
    def camerax_version = "1.0.2"
    implementation "androidx.camera:camera-camera2:$camerax_version"// CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-lifecycle:$camerax_version"// CameraX Lifecycle Library
    implementation "androidx.camera:camera-view:1.1.0-beta01" // CameraX View class
    //life cycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"
    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    //lottie for animations
    implementation "com.airbnb.android:lottie:3.4.0"


    def googleTruthVersion = "1.1.2"
    //for local unit test
    testImplementation 'junit:junit:4.13.2'
    // Required -- JUnit 4 framework standard test library for android included by default
    // Assertions is used for testing equality results that makes it more readable for us
    testImplementation "com.google.truth:truth:$googleTruthVersion" //for test package
    androidTestImplementation "com.google.truth:truth:$googleTruthVersion"
    // for androidTest package
    //ui test libraries
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}